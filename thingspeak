//käytetyt kirjastot
#include <Arduino.h>
#include <WiFi.h>
#include "ThingSpeak.h"

//thingspeak kanavan koodit
#define CHANNEL_ID 1204080
#define CHANNEL_API_KEY "API_Key"

#ifdef __cplusplus
extern "C" {
#endif 
uint8_t temprature_sens_read();
#ifdef __cplusplus
}
#endif
 
uint8_t temprature_sens_read();

WiFiClient client;

#define WIFI_NETWORK "Wifin nimi"
#define WIFI_PASSWORD "salasana"
#define WIFI_TIMEOUT_MS 20000 //aikakatkaisu wifille jos kesto <20sek 


void connectToWiFi(){
  Serial.print("yhdistetään wifiin");
  WiFi.mode(WIFI_STA);
  WiFi.begin(WIFI_NETWORK, WIFI_PASSWORD);


  unsigned long startAttempTime = millis();

  while(WiFi.status() != WL_CONNECTED && millis() - startAttempTime < WIFI_TIMEOUT_MS){
  Serial.print(".");
  delay(100);
}


if(WiFi.status() != WL_CONNECTED){
  Serial.println(" Failed ");
}else{
  Serial.print("connected");
  Serial.println(WiFi.localIP());
}
}

void setup() {
   
  Serial.begin(115200);
  connectToWiFi();
  ThingSpeak.begin(client);
}

void loop() {
  float t =0;
  t = ((temprature_sens_read()-32)/1.8);

  Serial.print("Temperature: ");
  
  // Convert raw temperature in F to Celsius degrees
  Serial.print((temprature_sens_read() - 32) / 1.8);
  Serial.println(" C");


  ThingSpeak.setField( 1, t);
  ThingSpeak.setField( 2, WiFi.RSSI());

  ThingSpeak.writeFields(CHANNEL_ID, CHANNEL_API_KEY);

   delay(20000);
}
